{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/projects/todo-hooks/client/src/components/TaskWrapper/TaskWrapper.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Task from '../Task/Task';\nimport TaskCreate from '../TaskCreate/TaskCreate';\nimport './TaskWrapper.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskWrapper() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTask = userInput => {\n    if (userInput) {\n      const newTodo = {\n        id: Math.random().toString(36).substring(2, 9),\n        text: userInput,\n        done: false,\n        like: false\n      };\n      setTodos([newTodo, ...todos]);\n    }\n  };\n\n  const removeTask = id => {\n    setTodos([...todos.filter(item => item.id !== id)]);\n  };\n\n  const changeDone = id => {\n    // setTodos([\n    //     todos.map(item => {\n    //         item.id === id ? {...item, done: !item.done} : {...item}\n    //     })\n    // ])\n    setTodos(todos.map(item => {\n      if (item.id === id) {\n        return { ...item,\n          done: !item.done\n        };\n      }\n\n      return item;\n    }));\n  };\n\n  const changeLike = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(TaskCreate, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), todos.map(item => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        item: item,\n        removeTask: removeTask,\n        changeDone: changeDone,\n        changeLike: changeLike\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskWrapper, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TaskWrapper;\nexport default TaskWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskWrapper\");","map":{"version":3,"sources":["/home/user/Desktop/projects/todo-hooks/client/src/components/TaskWrapper/TaskWrapper.js"],"names":["useState","Task","TaskCreate","TaskWrapper","todos","setTodos","addTask","userInput","newTodo","id","Math","random","toString","substring","text","done","like","removeTask","filter","item","changeDone","map","changeLike"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,mBAAP;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAIC,SAAD,IAAe;AAC3B,QAAIA,SAAJ,EAAe;AACX,YAAMC,OAAO,GAAG;AACZC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwC,CAAxC,CADQ;AAEZC,QAAAA,IAAI,EAAEP,SAFM;AAGZQ,QAAAA,IAAI,EAAE,KAHM;AAIZC,QAAAA,IAAI,EAAE;AAJM,OAAhB;AAMAX,MAAAA,QAAQ,CAAC,CAACG,OAAD,EAAU,GAAGJ,KAAb,CAAD,CAAR;AACH;AACJ,GAVD;;AAYA,QAAMa,UAAU,GAAIR,EAAD,IAAQ;AACvBJ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACc,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACV,EAAL,KAAYA,EAAjC,CAAJ,CAAD,CAAR;AACH,GAFD;;AAIA,QAAMW,UAAU,GAAIX,EAAD,IAAQ;AACvB;AACA;AACA;AACA;AACA;AACAJ,IAAAA,QAAQ,CAACD,KAAK,CAACiB,GAAN,CAAUF,IAAI,IAAI;AACvB,UAAGA,IAAI,CAACV,EAAL,KAAYA,EAAf,EAAmB;AACf,eAAO,EAAC,GAAGU,IAAJ;AAAUJ,UAAAA,IAAI,EAAE,CAACI,IAAI,CAACJ;AAAtB,SAAP;AACH;;AACD,aAAOI,IAAP;AACH,KALQ,CAAD,CAAR;AAOH,GAbD;;AAeA,QAAMG,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIF,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,OAAO,EAAEhB;AADX;AAAA;AAAA;AAAA;AAAA,YADF,EAIGF,KAAK,CAACiB,GAAN,CAAUF,IAAI,IAAI;AACf,0BACI,QAAC,IAAD;AAEE,QAAA,IAAI,EAAEA,IAFR;AAGE,QAAA,UAAU,EAAEF,UAHd;AAIE,QAAA,UAAU,EAAEG,UAJd;AAKE,QAAA,UAAU,EAAEE;AALd,SACOH,IAAI,CAACV,EADZ;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVA,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAzDQN,W;;KAAAA,W;AA2DT,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\nimport Task from '../Task/Task';\nimport TaskCreate from '../TaskCreate/TaskCreate';\nimport './TaskWrapper.css';\n\nfunction TaskWrapper() {\n\n    const [todos, setTodos] = useState([]);\n\n    const addTask = (userInput) => {\n        if (userInput) {\n            const newTodo = {\n                id: Math.random().toString(36).substring(2, 9), \n                text: userInput, \n                done: false, \n                like: false\n            }\n            setTodos([newTodo, ...todos])\n        }\n    }\n\n    const removeTask = (id) => {\n        setTodos([...todos.filter(item => item.id !== id)])\n    }\n\n    const changeDone = (id) => {\n        // setTodos([\n        //     todos.map(item => {\n        //         item.id === id ? {...item, done: !item.done} : {...item}\n        //     })\n        // ])\n        setTodos(todos.map(item => {\n            if(item.id === id) {\n                return {...item, done: !item.done}\n            }\n            return item\n        }))\n        \n    }\n\n    const changeLike = () => {\n        \n    }\n \n  return (\n    <div className=\"task-wrapper\">\n      <TaskCreate\n        addTask={addTask}\n      />\n      {todos.map(item => {\n          return(\n              <Task\n                key={item.id}\n                item={item}\n                removeTask={removeTask}\n                changeDone={changeDone}\n                changeLike={changeLike}\n              />\n          )\n      })}\n    </div>\n  );\n}\n\nexport default TaskWrapper;\n"]},"metadata":{},"sourceType":"module"}