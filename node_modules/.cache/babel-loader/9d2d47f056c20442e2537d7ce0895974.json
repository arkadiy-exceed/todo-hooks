{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/projects/todo-hooks/client/src/components/TaskWrapper/TaskWrapper.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Task from '../Task/Task';\nimport TaskCreate from '../TaskCreate/TaskCreate';\nimport './TaskWrapper.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskWrapper() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTask = userInput => {\n    if (userInput) {\n      axios.post('http://localhost:6000/tasks/', {\n        text: userInput,\n        done: false,\n        like: false\n      }).then(res => {\n        setTodos([res.data, ...todos]);\n      });\n    }\n  };\n\n  const removeTask = id => {\n    setTodos([...todos.filter(item => item.id !== id)]);\n  };\n\n  const changeDone = id => {\n    setTodos(todos.map(item => {\n      if (item.id === id) {\n        return { ...item,\n          done: !item.done\n        };\n      }\n\n      return item;\n    }));\n  };\n\n  const changeLike = id => {\n    setTodos(todos.map(item => {\n      if (item.id === id) {\n        return { ...item,\n          like: !item.like\n        };\n      }\n\n      return item;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(TaskCreate, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), console.log(todos), todos.map(item => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        item: item,\n        removeTask: removeTask,\n        changeDone: changeDone,\n        changeLike: changeLike\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskWrapper, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TaskWrapper;\nexport default TaskWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskWrapper\");","map":{"version":3,"sources":["/home/user/Desktop/projects/todo-hooks/client/src/components/TaskWrapper/TaskWrapper.js"],"names":["useState","Task","TaskCreate","axios","TaskWrapper","todos","setTodos","addTask","userInput","post","text","done","like","then","res","data","removeTask","id","filter","item","changeDone","map","changeLike","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,OAAO,GAAIC,SAAD,IAAe;AAC3B,QAAIA,SAAJ,EAAe;AACXL,MAAAA,KAAK,CAACM,IAAN,CAAW,8BAAX,EAA2C;AACvCC,QAAAA,IAAI,EAAEF,SADiC;AAEvCG,QAAAA,IAAI,EAAE,KAFiC;AAGvCC,QAAAA,IAAI,EAAE;AAHiC,OAA3C,EAIGC,IAJH,CAIQC,GAAG,IAAI;AACXR,QAAAA,QAAQ,CAAC,CAACQ,GAAG,CAACC,IAAL,EAAW,GAAGV,KAAd,CAAD,CAAR;AACH,OAND;AAOH;AACJ,GAVD;;AAYA,QAAMW,UAAU,GAAIC,EAAD,IAAQ;AACvBX,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACa,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAAjC,CAAJ,CAAD,CAAR;AACH,GAFD;;AAIA,QAAMG,UAAU,GAAIH,EAAD,IAAQ;AACvBX,IAAAA,QAAQ,CACJD,KAAK,CAACgB,GAAN,CAAUF,IAAI,IAAI;AACd,UAAGA,IAAI,CAACF,EAAL,KAAYA,EAAf,EAAmB;AACf,eAAO,EAAC,GAAGE,IAAJ;AAAUR,UAAAA,IAAI,EAAE,CAACQ,IAAI,CAACR;AAAtB,SAAP;AACH;;AACD,aAAOQ,IAAP;AACP,KALG,CADI,CAAR;AAOH,GARD;;AAUA,QAAMG,UAAU,GAAIL,EAAD,IAAQ;AACvBX,IAAAA,QAAQ,CACJD,KAAK,CAACgB,GAAN,CAAUF,IAAI,IAAI;AACd,UAAIA,IAAI,CAACF,EAAL,KAAYA,EAAhB,EAAoB;AAChB,eAAO,EAAC,GAAGE,IAAJ;AAAUP,UAAAA,IAAI,EAAE,CAACO,IAAI,CAACP;AAAtB,SAAP;AACH;;AACD,aAAOO,IAAP;AACH,KALD,CADI,CAAR;AAQH,GATD;;AAWF,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,OAAO,EAAEZ;AADX;AAAA;AAAA;AAAA;AAAA,YADF,EAIGgB,OAAO,CAACC,GAAR,CAAYnB,KAAZ,CAJH,EAKGA,KAAK,CAACgB,GAAN,CAAUF,IAAI,IAAI;AACf,0BACI,QAAC,IAAD;AAEE,QAAA,IAAI,EAAEA,IAFR;AAGE,QAAA,UAAU,EAAEH,UAHd;AAIE,QAAA,UAAU,EAAEI,UAJd;AAKE,QAAA,UAAU,EAAEE;AALd,SACOH,IAAI,CAACF,EADZ;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVA,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA5DQb,W;;KAAAA,W;AA8DT,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\nimport Task from '../Task/Task';\nimport TaskCreate from '../TaskCreate/TaskCreate';\nimport './TaskWrapper.css';\nimport axios from 'axios';\n\nfunction TaskWrapper() {\n\n    const [todos, setTodos] = useState([]);\n\n    const addTask = (userInput) => {\n        if (userInput) {\n            axios.post('http://localhost:6000/tasks/', {\n                text: userInput,\n                done: false,\n                like: false\n            }).then(res => {\n                setTodos([res.data, ...todos])\n            })\n        }\n    }\n\n    const removeTask = (id) => {\n        setTodos([...todos.filter(item => item.id !== id)])\n    }\n\n    const changeDone = (id) => {\n        setTodos(\n            todos.map(item => {\n                if(item.id === id) {\n                    return {...item, done: !item.done}\n                }\n                return item\n        }))\n    }\n\n    const changeLike = (id) => {\n        setTodos(\n            todos.map(item => {\n                if (item.id === id) {\n                    return {...item, like: !item.like}\n                }\n                return item\n            })\n        )\n    }\n \n  return (\n    <div className=\"task-wrapper\">\n      <TaskCreate\n        addTask={addTask}\n      />\n      {console.log(todos)}\n      {todos.map(item => {\n          return(\n              <Task\n                key={item.id}\n                item={item}\n                removeTask={removeTask}\n                changeDone={changeDone}\n                changeLike={changeLike}\n              />\n          )\n      })}\n    </div>\n  );\n}\n\nexport default TaskWrapper;\n"]},"metadata":{},"sourceType":"module"}