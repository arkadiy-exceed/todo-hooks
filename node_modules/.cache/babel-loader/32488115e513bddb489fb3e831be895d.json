{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/projects/todo-hooks/client/src/components/TaskWrapper/TaskWrapper.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Task from '../Task/Task';\nimport TaskCreate from '../TaskCreate/TaskCreate';\nimport './TaskWrapper.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskWrapper() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTask = userInput => {\n    if (userInput) {\n      axios.post('http://localhost:3002/tasks/', {\n        text: userInput,\n        done: false,\n        like: false\n      }).then(res => {\n        setTodos([res.data, ...todos]);\n      });\n    }\n  };\n\n  const removeTask = id => {\n    axios.delete(`http://localhost:3002/tasks/${id}`).then(res => setTodos(todos.filter(item => item._id !== res.data._id)));\n  };\n\n  const changeDone = (id, done) => {\n    axios.put(`http://localhost:3002/tasks/${id}`, {\n      done: !done\n    }).then(res => {\n      console.log(res);\n      setTodos(todos.map(item => {\n        if (item._id === res.data._id) {\n          return { ...item,\n            done: res.data.done\n          };\n        }\n\n        return item;\n      }));\n    });\n  };\n\n  const changeLike = (id, like) => {\n    axios.put(`http://localhost:3002/tasks/${id}`, {\n      like: !like\n    }).then(res => {\n      setTodos(todos.map(item => {\n        if (item._id === res.data._id) {\n          return { ...item,\n            like: res.data.like\n          };\n        }\n\n        return item;\n      }));\n    });\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:3002/tasks/').then(res => setTodos(res.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(TaskCreate, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), console.log(todos), todos.map(item => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        item: item,\n        removeTask: removeTask,\n        changeDone: changeDone,\n        changeLike: changeLike\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskWrapper, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = TaskWrapper;\nexport default TaskWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskWrapper\");","map":{"version":3,"sources":["/home/user/Desktop/projects/todo-hooks/client/src/components/TaskWrapper/TaskWrapper.js"],"names":["useEffect","useState","Task","TaskCreate","axios","TaskWrapper","todos","setTodos","addTask","userInput","post","text","done","like","then","res","data","removeTask","id","delete","filter","item","_id","changeDone","put","console","log","map","changeLike","get"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Task from '../Task/Task';\nimport TaskCreate from '../TaskCreate/TaskCreate';\nimport './TaskWrapper.css';\nimport axios from 'axios';\n\nfunction TaskWrapper() {\n\n    const [todos, setTodos] = useState([]);\n\n    const addTask = (userInput) => {\n        if (userInput) {\n            axios.post('http://localhost:3002/tasks/', {\n                text: userInput,\n                done: false,\n                like: false\n            }).then(res => {\n                setTodos([res.data, ...todos])\n            })\n        }\n    }\n\n    const removeTask = (id) => {\n        axios.delete(`http://localhost:3002/tasks/${id}`)\n        .then(res => \n            setTodos(todos.filter(item => item._id !== res.data._id))\n        )\n        \n    }\n\n    const changeDone = (id, done) => {\n        axios.put(`http://localhost:3002/tasks/${id}`, {\n            done: !done\n        })\n        .then(res => {\n            console.log(res)\n            setTodos(\n                todos.map(item => {\n                    if(item._id === res.data._id) {\n                        return {...item, done: res.data.done}\n                    }\n                    return item\n            }))\n        })\n        \n    }\n\n    const changeLike = (id, like) => {\n        axios.put(`http://localhost:3002/tasks/${id}`, {\n            like: !like\n        })\n        .then(res => {\n            setTodos(\n                todos.map(item => {\n                    if (item._id === res.data._id) {\n                        return {...item, like: res.data.like}\n                    }\n                    return item\n                })\n            )\n        })\n        \n    }\n\n    useEffect(() => {\n        axios.get('http://localhost:3002/tasks/')\n        .then(res => setTodos(res.data))\n    }, []) \n \n  return (\n    <div className=\"task-wrapper\">\n      <TaskCreate\n        addTask={addTask}\n      />\n      {console.log(todos)}\n      {todos.map(item => {\n          return(\n              <Task\n                key={item._id}\n                item={item}\n                removeTask={removeTask}\n                changeDone={changeDone}\n                changeLike={changeLike}\n              />\n          )\n      })}\n    </div>\n  );\n}\n\nexport default TaskWrapper;\n"]},"metadata":{},"sourceType":"module"}